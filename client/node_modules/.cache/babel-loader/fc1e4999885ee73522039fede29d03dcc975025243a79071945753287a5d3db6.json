{"ast":null,"code":"var _jsxFileName = \"/var/www/html/greek/client/src/components/admin/components/activitySetups/wordPairs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordPairs = ({\n  outChange,\n  options = {\n    A: \"English\",\n    B: \"Greek\"\n  }\n}) => {\n  _s();\n  const [wordPairs, setWordPairs] = useState([{\n    A: '',\n    B: ''\n  }]);\n  const addWordPair = () => {\n    setWordPairs([...wordPairs, {\n      A: '',\n      B: ''\n    }]);\n  };\n  const handleWordPairChange = (index, field, value) => {\n    const newWordPairs = [...wordPairs];\n    newWordPairs[index][field] = value;\n    setWordPairs(newWordPairs);\n    outChange(wordPairs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pairs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Add English and Greek word pairs:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), wordPairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pairs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: options.A,\n        value: pair.english,\n        onChange: e => handleWordPairChange(index, 'A', e.target.value),\n        className: \"pairs-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: options.B,\n        value: pair.greek,\n        onChange: e => handleWordPairChange(index, 'B', e.target.value),\n        className: \"pairs-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWordPair,\n      children: \"Add Word Pair\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(WordPairs, \"ZZMsw1aAH9kD8OKshHlQx84xYmQ=\");\n_c = WordPairs;\nexport default WordPairs;\nvar _c;\n$RefreshReg$(_c, \"WordPairs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordPairs","outChange","options","A","B","_s","wordPairs","setWordPairs","addWordPair","handleWordPairChange","index","field","value","newWordPairs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pair","type","placeholder","english","onChange","e","target","greek","onClick","_c","$RefreshReg$"],"sources":["/var/www/html/greek/client/src/components/admin/components/activitySetups/wordPairs.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst WordPairs = ({ outChange, options = {A: \"English\", B: \"Greek\"} }) => {\r\n    const [wordPairs, setWordPairs] = useState([{ A: '', B: '' }]);\r\n\r\n    const addWordPair = () => {\r\n        setWordPairs([...wordPairs, { A: '', B: '' }]);\r\n    };\r\n\r\n    const handleWordPairChange = (index, field, value) => {\r\n        const newWordPairs = [...wordPairs];\r\n        newWordPairs[index][field] = value;\r\n        setWordPairs(newWordPairs);\r\n        outChange(wordPairs);\r\n    };\r\n\r\n    return (\r\n        <div className=\"pairs-container\">\r\n            <label>Add English and Greek word pairs:</label>\r\n            {wordPairs.map((pair, index) => (\r\n            <div key={index} className=\"pairs-container\">\r\n                <input\r\n                type=\"text\"\r\n                placeholder={options.A}\r\n                value={pair.english}\r\n                onChange={(e) => handleWordPairChange(index, 'A', e.target.value)}\r\n                className=\"pairs-input\"\r\n                />\r\n                <input\r\n                type=\"text\"\r\n                placeholder={options.B}\r\n                value={pair.greek}\r\n                onChange={(e) => handleWordPairChange(index, 'B', e.target.value)}\r\n                className=\"pairs-input\"\r\n                />\r\n            </div>\r\n            ))}\r\n            <button type=\"button\" onClick={addWordPair}>\r\n            Add Word Pair\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WordPairs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO,GAAG;IAACC,CAAC,EAAE,SAAS;IAAEC,CAAC,EAAE;EAAO;AAAE,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;IAAEM,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,CAAC,CAAC;EAE9D,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtBD,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;MAAEH,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAG,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMK,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAClD,MAAMC,YAAY,GAAG,CAAC,GAAGP,SAAS,CAAC;IACnCO,YAAY,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;IAClCL,YAAY,CAACM,YAAY,CAAC;IAC1BZ,SAAS,CAACK,SAAS,CAAC;EACxB,CAAC;EAED,oBACIP,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BhB,OAAA;MAAAgB,QAAA,EAAO;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC/Cb,SAAS,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEX,KAAK,kBAC3BX,OAAA;MAAiBe,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBACxChB,OAAA;QACAuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAErB,OAAO,CAACC,CAAE;QACvBS,KAAK,EAAES,IAAI,CAACG,OAAQ;QACpBC,QAAQ,EAAGC,CAAC,IAAKjB,oBAAoB,CAACC,KAAK,EAAE,GAAG,EAAEgB,CAAC,CAACC,MAAM,CAACf,KAAK,CAAE;QAClEE,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFpB,OAAA;QACAuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAErB,OAAO,CAACE,CAAE;QACvBQ,KAAK,EAAES,IAAI,CAACO,KAAM;QAClBH,QAAQ,EAAGC,CAAC,IAAKjB,oBAAoB,CAACC,KAAK,EAAE,GAAG,EAAEgB,CAAC,CAACC,MAAM,CAACf,KAAK,CAAE;QAClEE,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA,GAdIT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeV,CACJ,CAAC,eACFpB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACO,OAAO,EAAErB,WAAY;MAAAO,QAAA,EAAC;IAE5C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACd,EAAA,CAxCIL,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
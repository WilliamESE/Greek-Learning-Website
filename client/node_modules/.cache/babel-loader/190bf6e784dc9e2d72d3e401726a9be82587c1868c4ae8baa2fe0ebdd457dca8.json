{"ast":null,"code":"var _jsxFileName = \"/var/www/html/greek/client/src/components/admin/components/activitySetups/textWords.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextWithWordList = ({\n  outChange,\n  initialText = '',\n  initialWords = []\n}) => {\n  _s();\n  const [longText, setLongText] = useState(initialText);\n  const [words, setWords] = useState(initialWords.length > 0 ? initialWords : []);\n\n  // Handle text input change\n  const handleTextChange = e => {\n    setLongText(e.target.value);\n    var out = [{\n      text: e.target.value\n    }, {\n      words: words\n    }];\n    outChange(out);\n  };\n\n  // Handle individual word change\n  const handleWordChange = (index, value) => {\n    const newWords = [...words];\n    newWords[index] = value;\n    setWords(newWords);\n    var out = [{\n      text: longText\n    }, {\n      words: newWords\n    }];\n    outChange(out);\n  };\n\n  // Add a new word input\n  const addWord = () => {\n    setWords([...words, '']);\n  };\n\n  // Remove a word input\n  const removeWord = index => {\n    setWords(words.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter text here with %(#) to indicate a blank where # is the word that should be there\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: longText,\n      onChange: handleTextChange,\n      placeholder: longText,\n      rows: \"10\",\n      className: \"test-longtext\",\n      style: {\n        width: '100%',\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Word List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-words\",\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [index, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: word,\n        className: \"text-words-text\",\n        onChange: e => handleWordChange(index, e.target.value),\n        placeholder: `Word ${index + 1}`,\n        style: {\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removeWord(index),\n        className: \"text-words-text\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addWord,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Add Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TextWithWordList, \"nV8Pn316PmYhvvpQivr6yLk9DHw=\");\n_c = TextWithWordList;\nexport default TextWithWordList;\nvar _c;\n$RefreshReg$(_c, \"TextWithWordList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextWithWordList","outChange","initialText","initialWords","_s","longText","setLongText","words","setWords","length","handleTextChange","e","target","value","out","text","handleWordChange","index","newWords","addWord","removeWord","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","style","width","marginBottom","map","word","display","alignItems","type","marginRight","onClick","marginTop","_c","$RefreshReg$"],"sources":["/var/www/html/greek/client/src/components/admin/components/activitySetups/textWords.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TextWithWordList = ({outChange, initialText = '', initialWords = [] }) => {\r\n  const [longText, setLongText] = useState(initialText);\r\n  const [words, setWords] = useState(initialWords.length > 0 ? initialWords : []);\r\n\r\n  // Handle text input change\r\n  const handleTextChange = (e) => {\r\n    setLongText(e.target.value);\r\n    var out = [\r\n        {text: e.target.value},\r\n        {words: words}\r\n    ];\r\n\r\n    outChange(out);\r\n  };\r\n\r\n  // Handle individual word change\r\n  const handleWordChange = (index, value) => {\r\n    const newWords = [...words];\r\n    newWords[index] = value;\r\n    setWords(newWords);\r\n\r\n    var out = [\r\n        {text: longText},\r\n        {words: newWords}\r\n    ];\r\n    outChange(out);\r\n  };\r\n\r\n  // Add a new word input\r\n  const addWord = () => {\r\n    setWords([...words, '']);\r\n  };\r\n\r\n  // Remove a word input\r\n  const removeWord = (index) => {\r\n    setWords(words.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div className=\"setup-container\">\r\n      <h3>Enter text here with %(#) to indicate a blank where # is the word that should be there</h3>\r\n      <textarea\r\n        value={longText}\r\n        onChange={handleTextChange}\r\n        placeholder= {longText}\r\n        rows=\"10\"\r\n        className=\"test-longtext\"\r\n        style={{ width: '100%', marginBottom: '20px' }}\r\n      />\r\n\r\n      <h3>Word List</h3>\r\n      {words.map((word, index) => (\r\n        <div key={index} className=\"text-words\" style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n            <label>{index}:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={word}\r\n            className=\"text-words-text\"\r\n            onChange={(e) => handleWordChange(index, e.target.value)}\r\n            placeholder={`Word ${index + 1}`}\r\n            style={{ marginRight: '10px' }}\r\n          />\r\n          <button type=\"button\" onClick={() => removeWord(index)} className=\"text-words-text\">\r\n            Remove\r\n          </button>\r\n        </div>\r\n      ))}\r\n      \r\n      <button type=\"button\" onClick={addWord} style={{ marginTop: '10px' }}>\r\n        Add Word\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextWithWordList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
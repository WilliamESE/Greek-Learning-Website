{"ast":null,"code":"var _jsxFileName = \"/var/www/html/greek/client/src/components/header/header.js\";\nimport React from 'react';\nimport Navigation from '../navigation/navigation';\n\n///api/userprogress\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevents page reload\n\n    try {\n      // Make POST request to the server’s login endpoint\n      const response = await axios.post('/login', {\n        username: username,\n        password: password\n      });\n\n      // Save token in state if login is successful\n      setError(''); // Clear any previous error\n      onLogin(response.data.token, response.data.id);\n    } catch (err) {\n      console.error('Login error:', err);\n      setError('Invalid username or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Navigation","jsxDEV","_jsxDEV","Login","onLogin","handleSubmit","e","preventDefault","response","axios","post","username","password","setError","data","token","id","err","console","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/greek/client/src/components/header/header.js"],"sourcesContent":["import React from 'react';\r\nimport Navigation from '../navigation/navigation'\r\n\r\n///api/userprogress\r\n\r\nconst Login = ({onLogin}) => {\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); // Prevents page reload\r\n\r\n        try {\r\n            // Make POST request to the server’s login endpoint\r\n            const response = await axios.post('/login', {\r\n              username: username,\r\n              password: password,\r\n            });\r\n\r\n            // Save token in state if login is successful\r\n            setError(''); // Clear any previous error\r\n            onLogin(response.data.token, response.data.id);\r\n        } catch (err) {\r\n            console.error('Login error:', err);\r\n            setError('Invalid username or password');\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <Navigation />\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAEzB,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,QAAQ,EAAE;QAC1CC,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA;MACZ,CAAC,CAAC;;MAEF;MACAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdT,OAAO,CAACI,QAAQ,CAACM,IAAI,CAACC,KAAK,EAAEP,QAAQ,CAACM,IAAI,CAACE,EAAE,CAAC;IAClD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;MAClCJ,QAAQ,CAAC,8BAA8B,CAAC;IAC5C;EACJ,CAAC;EAGD,oBACIX,OAAA,CAACF,UAAU;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEtB,CAAC;AAAAC,EAAA,GAzBKrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}